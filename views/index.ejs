<% include partials/chat_header %>
<div class="text-right pad-extra pad-down row">
  <div class="input-field text-center col s12">
    <button class="btn btn-success" value="submit" action="/logout" name="Submit">Logout</button>

    <!--Remove in production-->
    <button id="clear" class="btn btn-danger">Clear</button>
  </div>
</div>

<div class="chatbox">
  <div class="well well-sm">
    <p><%=auth_user %></p>
  </div>

  <div id="status" class="alert alert-success alert-dismissible fade in">
    <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
  </div>

  <div class="chatlogs" id="chat">
    <div class="chat friend">
      <div class="user-photo"><img src="images/user.jpg"></div>
      <div class="subchat" id="messages"></div>
    </div>
    <!--<div class="chat self">
      <div class="user-photo"><img src="images/user.jpg"></div>
      <p class="chat-message"></p>
    </div>-->

    <div class="chat-form">
      <textarea id="text-area" placeholder="Enter message..."></textarea>
    </div>
  </div>
</div>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.0.3/socket.io.js"></script>

    <script>
        (function(){
            var element = function(id){
                return document.getElementById(id);
            }
            // Get Elements
            var status = element('status');
            var messages = element('messages');
            console.log('messages',messages);
            var text_area = element('text-area');
            console.log('textarea',text_area);
            var username = element('username');

            //Remove in production...
            var clearBtn = element('clear');

            // Set default status
            var statusDefault = status.textContent;
            var setStatus = function(s){
                // Set status
                status.textContent = s;
                if(s !== statusDefault){
                    var delay = setTimeout(function(){
                        setStatus(statusDefault);
                    }, 4000);
                }
            }
            // Connect to socket.io
            var socket = io.connect('http://149.129.138.211');
            // Check for connection
            if(socket !== undefined){
                console.log('Connected to socket...');
                // Handle Output
                socket.on('output', function(data){
                    console.log(data);

                    if(data.length){
                        for(var x = data.length-1;x >= 0; x--){
                            // Build out message div
                            var message = document.createElement('p');
                            message.setAttribute('class', 'chat-message');
                            message.textContent = data[x].name+": "+data[x].message;
                            messages.appendChild(message);
                            messages.insertBefore(message, messages.firstChild);
                        }
                    }
                });
                // Get Status From Server
                socket.on('status', function(data){
                    // get message status
                    setStatus((typeof data === 'object')? data.message : data);
                    // If status is clear, clear text
                    if(data.clear){
                        text_area.value = '';
                    }
                });
                // Handle Input

                text_area.addEventListener('keydown', function(event){
                    if(event.which === 13 && event.shiftKey == false){
                        // Emit to server input
                        socket.emit('input', {
                            name:username.value,
                            message:getElementById('text-area').value
                        });
                        event.preventDefault();
                    }
                })

                // Handle Chat Clear
                clearBtn.addEventListener('click', function(){
                    socket.emit('clear');
                });
                // Clear Message
                socket.on('cleared', function(){
                    messages.textContent = '';
                });

            }
        })();
    </script>
<% include partials/footer %>
