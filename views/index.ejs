<% include partials/chat_header %>
<div class="pad"></div>

<div style="padding-left:50px; padding-right: 50px;"
<div class="container text-center">
  <div class="row">
    <div class="col-sm">
      <button id="clear" class="btn btn-danger">Clear</button>
    </div>
    <div class="col-sm">
      <button class="btn btn-warning" name="create" id="create" onclick="makeid()" title="We will generate your unique team ID">
        Create a team
      </button>
      <div class="col-sm" id="id_display"></div>
    </div>
    <div class="col-sm">
      <input type="text" id="team_id" placeholder="Enter team ID" />
    </div>
    <div class="col-sm">
      <button class="btn btn-success" name="join" id="join" title="Join an existing chat team">
        Join someone's team
      </button>
    </div>
  </div>
</div>
</div>

<div class="chatbox pad-down">
  <div class="row">
    <span class="col-md-3 col-sm-3">
      <img src="images/user.jpg" class="user-avatar">
      <label for="username">Username:</label>
    </span>
    <span class="col-md-9 col-sm-3 align-fix">
      <input type="text" style="padding-left: 7px; font-size: 1.2rem; border-bottom: 1px rgba(0,0,0,0.42);" id="username" value="<%=auth_user %>" disabled>
    </span>
  </div>

  <div id="status" class="alert alert-success fade in">
  </div>

  <div class="chatlogs" id="chat">
    <div class="chat friend">
      <div class="user-photo"><img src="images/user.jpg"></div>
      <div class="subchat" id="messages"></div>
    </div>
    <!--<div class="chat self">
      <div class="user-photo"><img src="images/user.jpg"></div>
      <p class="chat-message"></p>
    </div>-->
  </div>
  <div class="chat-form">
    <textarea id="text-area" placeholder="Enter message..."></textarea>
  </div>
</div>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.0.3/socket.io.js"></script>

    <script>

    function makeid() {
      var id = Math.floor(Math.random() * 20);
      var idbox = document.createElement('input');
      idbox.setAttribute('type', 'text');
      idbox.textContent = id;
      idbox.setAttribute("readonly", true);
      getElementById('id_display').appendChild(idbox);
      getElementById('id_display').insertBefore(idbox, getElementById('id_display').firstChild);
    }


        (function(){
            var element = function(id){
                return document.getElementById(id);
            }
            // Get Elements
            var status = element('status');
            var messages = element('messages');
            var text_area = element('text-area');
            var username = element('username');

            //Remove in production...
            var clearBtn = element('clear');

            var joinBtn = element('join');
            var createBtn = element('create');

            // Set default status
            var statusDefault = status.textContent;
            var setStatus = function(s){
                // Set status
                status.textContent = s;
                if(s !== statusDefault){
                    var delay = setTimeout(function(){
                        setStatus(statusDefault);
                    }, 4000);
                }
            }
            // Connect to socket.io
            var socket = io.connect('http://149.129.137.246');
            // Check for connection
            if(socket !== undefined){
                console.log('Connected to socket...');
                // Handle Output
                socket.on('output', function(data){
                    console.log('Chat JSON',data);

                    if(data.length){
                        for(var x = data.length-1;x >= 0; x--){
                            // Build out message div
                            var message = document.createElement('p');
                            message.setAttribute('class', 'chat-message');
                            message.textContent = data[x].name+": "+data[x].message;
                            messages.appendChild(message);
                            messages.insertBefore(message, messages.firstChild);
                        }
                    }
                });
                // Get Status From Server
                socket.on('status', function(data){
                    // get message status
                    setStatus((typeof data === 'object')? data.message : data);
                    // If status is clear, clear text
                    if(data.clear){
                        text_area.value = '';
                    }
                });
                // Handle Input
                text_area.addEventListener('keydown', function(event){
                    if(event.which === 13 && event.shiftKey == false){
                        // Emit to server input
                        socket.emit('input', {
                            name:username.value,
                            message:text_area.value
                        });
                        event.preventDefault();
                    }
                })

                // Handle Chat Clear
                clearBtn.addEventListener('click', function(){
                    socket.emit('clear');
                });
                // Clear Message
                socket.on('cleared', function(){
                    messages.textContent = '';
                });

            }
        })();
    </script>
<% include partials/chat_footer %>
