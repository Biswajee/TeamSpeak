<% include partials/chat_header %>
<div class="menu">
            <div class="back"><i class="fa fa-chevron-left"></i> <img src="images/user.jpg" draggable="false"/></div>
            <div class="name" id="username"><%=auth_user %></div>
            <input type="text" style="display: none;" id="usertag" value='<%=auth_user %>' disabled />

            <div class="dropdown dialog-cog">
              <i class="fa fa-2x fa-cog dropdown-toggle" data-toggle="dropdown" aria-hidden="true"></i>
                <ul class="dropdown-menu">
                  <li style="text-align: center;"><a href="../logout">Logout</a></li>
                </ul>
              </div>

            <!--<div class="btn-group dialog-cog" dropdown>
              <button type="button" class="btn btn-danger dropdown-toggle" dropdown-toggle></button>
              <ul class="dropdown-menu" role="menu">
                <li><a href="../logout">Logout</a></li>
              </ul>
            </div>-->
            <div class="dialogs">
              <button class="btn btn-warning" id="create" onclick="displayid()" title="We will assign your unique team ID. This will be once in a session.">
                Create team
              </button>
              <span id="id_display"></span>
              <input type="text" id="join_id" placeholder="Enter team ID" />
              <button class="btn btn-success" name="join" id="join" onclick="join_team()" title="Join existing team's chat">
                Join team
              </button>
            </div>
            <div class="last" id="time"></div>
        </div>
    <ol class="chat" id="messages">
    </ol>
    <input class="textarea" id="text-area" type="text" placeholder="Type here!"/><div class="emojis"></div>

    <!--Development features are disabled-->
    <button id='clear' style="display: none;"></button>
    <div id="status" style="display: none;"></div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.0.3/socket.io.js"></script>

    <script>

    var id = function(){
              return Math.floor((Math.random() * 5130) + 9921.6);
             }();

    function displayid() {
      var idbox = document.createElement('input');
      idbox.setAttribute('type', 'text');
      idbox.value = id;
      idbox.setAttribute("readonly", true);
      document.getElementById('id_display').appendChild(idbox);
      document.getElementById('id_display').insertBefore(idbox, document.getElementById('id_display').firstChild);
    }


        (function(){
            var element = function(id){
                return document.getElementById(id);
            }
            // Get Elements
            //var status = element('status');
            var messages = element('messages');
            var text_area = element('text-area');
            var username = element('usertag');

            //Remove in production...
            var clearBtn = element('clear');

            var joinBtn = element('join');
            var createBtn = element('create');

            // Set default status
              var statusDefault = status.textContent;
              var setStatus = function(s){
                  // Set status
                  status.textContent = s;
                  if(s !== statusDefault){
                      var delay = setTimeout(function(){
                          setStatus(statusDefault);
                      }, 4000);
                  }
              }

            // Connect to socket.io
            var socket = io.connect('http://149.129.145.179');
            // Check for connection
            if(socket !== undefined){
                console.log('Connected to socket...');

                // Handle Output
                socket.on('output', function(data){
                    console.log('Chat JSON',data);

                    if(data.length){
                        for(var x = data.length-1;x >= 0; x--){
                            // Build out message div
                            var message_li = document.createElement('li');
                            message_li.setAttribute('class', 'self');
                            messages.appendChild(message_li);

                            var avatar_tag = document.createElement('div');
                            avatar_tag.setAttribute('class', 'avatar');
                            message_li.appendChild(avatar_tag);

                            var img_avatar = document.createElement('img');
                            img_avatar.setAttribute('src', 'images/user.jpg');
                            avatar_tag.appendChild(img_avatar);

                            var msg_div = document.createElement('div');
                            msg_div.setAttribute('class', 'msg');
                            message_li.appendChild(msg_div);

                            var message = document.createElement('p');
                            message.textContent = data[x].name+": "+data[x].message;
                            msg_div.appendChild(message);
                            msg_div.insertBefore(message, msg_div.firstChild);
                        }
                    }
                });
                // Get Status From Server
                socket.on('status', function(data){
                    // get message status
                    setStatus((typeof data === 'object')? data.message : data);
                    // If status is clear, clear text
                    if(data.clear){
                        text_area.value = '';
                    }
                });
                // Handle Input
                text_area.addEventListener('keydown', function(event){
                    if(event.which === 13 && event.shiftKey == false){
                        // Emit to server input
                        socket.emit('input', {
                            name:username.value,
                            message:text_area.value
                        });
                        event.preventDefault();
                    }
                })

                // DEVELOPMENT :: Handle Chat Clear
                clearBtn.addEventListener('click', function(){
                    socket.emit('clear');
                });
                //Clear Message
                socket.on('cleared', function(){
                    messages.textContent = '';
                });

                socket.emit('create', id);
            }
        })();

        //Upon clicking join team button...
        function join_team(){
          var join_id = document.getElementById('join_id').value;
          if(join_id === ""){
            alert('Enter a team ID to join chat !');
          }

          var element = function(id){
              return document.getElementById(id);
          }
          // Get Elements
          //var status = element('status');
          var messages = element('messages');
          var text_area = element('text-area');
          var username = element('usertag');

          //Remove in production...
          var clearBtn = element('clear');

          var joinBtn = element('join');
          var createBtn = element('create');

          // Set default status
            var statusDefault = status.textContent;
            var setStatus = function(s){
                // Set status
                status.textContent = s;
                if(s !== statusDefault){
                    var delay = setTimeout(function(){
                        setStatus(statusDefault);
                    }, 4000);
                }
            }

          // Connect to socket.io
          var socket = io.connect('http://149.129.145.179');
          // Check for connection
          if(socket !== undefined){
              console.log('Re connected to socket...');

              // Handle Output
              socket.on('join_output', function(data){
                  console.log('Chat JSON',data);

                  if(data.length){
                      for(var x = data.length-1;x >= 0; x--){
                          // Build out message div
                          var message_li = document.createElement('li');
                          message_li.setAttribute('class', 'self');
                          messages.appendChild(message_li);

                          var avatar_tag = document.createElement('div');
                          avatar_tag.setAttribute('class', 'avatar');
                          message_li.appendChild(avatar_tag);

                          var img_avatar = document.createElement('img');
                          img_avatar.setAttribute('src', 'images/user.jpg');
                          avatar_tag.appendChild(img_avatar);

                          var msg_div = document.createElement('div');
                          msg_div.setAttribute('class', 'msg');
                          message_li.appendChild(msg_div);

                          var message = document.createElement('p');
                          message.textContent = data[x].name+": "+data[x].message;
                          msg_div.appendChild(message);
                          msg_div.insertBefore(message, msg_div.firstChild);
                      }
                  }
              });
              // Get Status From Server
              socket.on('status', function(data){
                  // get message status
                  setStatus((typeof data === 'object')? data.message : data);
                  // If status is clear, clear text
                  if(data.clear){
                      text_area.value = '';
                  }
              });

              // Handle Chat Clear
              clearBtn.addEventListener('click', function(){
                  socket.emit('clear');
              });
              // Clear Message
              socket.on('cleared', function(){
                  messages.textContent = '';
              });

          socket.emit('join', join_id);
        }
      }
      (function () {
      function checkTime(i) {
          return (i < 10) ? "0" + i : i;
      }

      function startTime() {
          var today = new Date(),
              h = checkTime(today.getHours()),
              m = checkTime(today.getMinutes()),
              s = checkTime(today.getSeconds());
          document.getElementById('time').innerHTML = h + ":" + m + ":" + s;
          t = setTimeout(function () {
              startTime()
          }, 500);
      }
      startTime();
  })();

    </script>
<% include partials/chat_footer %>
